# Begin dynamic section
if (table.lookup(active_ab_tests, "MyTest") == "true") {
	if (req.http.User-Agent ~ "^GOV\.UK Crawler Worker") {
		set req.http.GOVUK-ABTest-MyTest = "foo";
	} else if (req.url ~ "[\?\&]ABTest-MyTest=foo(&|$)") {
		# Some users, such as remote testers, will be given a URL with a query string
		# to place them into a specific bucket.
		set req.http.GOVUK-ABTest-MyTest = "foo";
	} else if (req.url ~ "[\?\&]ABTest-MyTest=bar(&|$)") {
		# Some users, such as remote testers, will be given a URL with a query string
		# to place them into a specific bucket.
		set req.http.GOVUK-ABTest-MyTest = "bar";
	} else if (req.http.Cookie ~ "ABTest-MyTest") {
		# Set the value of the header to whatever decision was previously made
		set req.http.GOVUK-ABTest-MyTest = req.http.Cookie:ABTest-MyTest;
	} else {
		declare local var.denominator_MyTest INTEGER;
		set req.http.X-ClientIDHash = digest.hash_md5(client.ip req.http.User-Agent);
		set req.http.X-ClientIDHash-trimmed = regsub(req.http.X-ClientIDHash, "^([a-fA-F0-9]{10}).*$","\1");
		set req.http.X-ClientID = std.strtol(req.http.X-ClientIDHash-trimmed, 16);
		declare local var.denominator_MyTest_foo INTEGER;
		declare local var.nominator_MyTest_foo INTEGER;
		set var.nominator_MyTest_foo = std.atoi(table.lookup(mytest_percentages, "foo"));
		set var.denominator_MyTest += var.nominator_MyTest_foo;
		declare local var.denominator_MyTest_bar INTEGER;
		declare local var.nominator_MyTest_bar INTEGER;
		set var.nominator_MyTest_bar = std.atoi(table.lookup(mytest_percentages, "bar"));
		set var.denominator_MyTest += var.nominator_MyTest_bar;
		set var.denominator_MyTest_foo = var.denominator_MyTest;
		if (randombool_seeded(var.nominator_MyTest_foo, var.denominator_MyTest_foo, std.atoi(req.http.X-ClientID))) {
			set req.http.GOVUK-ABTest-MyTest = "foo";
		} else {
			set req.http.GOVUK-ABTest-MyTest = "bar";
		}
	}
}
if (table.lookup(active_ab_tests, "YourTest") == "true") {
	if (req.http.User-Agent ~ "^GOV\.UK Crawler Worker") {
		set req.http.GOVUK-ABTest-YourTest = "variant1";
	} else if (req.url ~ "[\?\&]ABTest-YourTest=variant1(&|$)") {
		# Some users, such as remote testers, will be given a URL with a query string
		# to place them into a specific bucket.
		set req.http.GOVUK-ABTest-YourTest = "variant1";
	} else if (req.url ~ "[\?\&]ABTest-YourTest=variant2(&|$)") {
		# Some users, such as remote testers, will be given a URL with a query string
		# to place them into a specific bucket.
		set req.http.GOVUK-ABTest-YourTest = "variant2";
	} else if (req.url ~ "[\?\&]ABTest-YourTest=variant3(&|$)") {
		# Some users, such as remote testers, will be given a URL with a query string
		# to place them into a specific bucket.
		set req.http.GOVUK-ABTest-YourTest = "variant3";
	} else if (req.url ~ "[\?\&]ABTest-YourTest=variant4(&|$)") {
		# Some users, such as remote testers, will be given a URL with a query string
		# to place them into a specific bucket.
		set req.http.GOVUK-ABTest-YourTest = "variant4";
	} else if (req.http.Cookie ~ "ABTest-YourTest") {
		# Set the value of the header to whatever decision was previously made
		set req.http.GOVUK-ABTest-YourTest = req.http.Cookie:ABTest-YourTest;
	} else {
		declare local var.denominator_YourTest INTEGER;
		set req.http.X-ClientIDHash = digest.hash_md5(client.ip req.http.User-Agent);
		set req.http.X-ClientIDHash-trimmed = regsub(req.http.X-ClientIDHash, "^([a-fA-F0-9]{10}).*$","\1");
		set req.http.X-ClientID = std.strtol(req.http.X-ClientIDHash-trimmed, 16);
		declare local var.denominator_YourTest_variant1 INTEGER;
		declare local var.nominator_YourTest_variant1 INTEGER;
		set var.nominator_YourTest_variant1 = std.atoi(table.lookup(yourtest_percentages, "variant1"));
		set var.denominator_YourTest += var.nominator_YourTest_variant1;
		declare local var.denominator_YourTest_variant2 INTEGER;
		declare local var.nominator_YourTest_variant2 INTEGER;
		set var.nominator_YourTest_variant2 = std.atoi(table.lookup(yourtest_percentages, "variant2"));
		set var.denominator_YourTest += var.nominator_YourTest_variant2;
		declare local var.denominator_YourTest_variant3 INTEGER;
		declare local var.nominator_YourTest_variant3 INTEGER;
		set var.nominator_YourTest_variant3 = std.atoi(table.lookup(yourtest_percentages, "variant3"));
		set var.denominator_YourTest += var.nominator_YourTest_variant3;
		declare local var.denominator_YourTest_variant4 INTEGER;
		declare local var.nominator_YourTest_variant4 INTEGER;
		set var.nominator_YourTest_variant4 = std.atoi(table.lookup(yourtest_percentages, "variant4"));
		set var.denominator_YourTest += var.nominator_YourTest_variant4;
		set var.denominator_YourTest_variant1 = var.denominator_YourTest;
		set var.denominator_YourTest_variant2 = var.denominator_YourTest_variant1;
		set var.denominator_YourTest_variant2 -= var.nominator_YourTest_variant1;
		set var.denominator_YourTest_variant3 = var.denominator_YourTest_variant2;
		set var.denominator_YourTest_variant3 -= var.nominator_YourTest_variant2;
		if (randombool_seeded(var.nominator_YourTest_variant1, var.denominator_YourTest_variant1, std.atoi(req.http.X-ClientID))) {
			set req.http.GOVUK-ABTest-YourTest = "variant1";
		} else if (randombool_seeded(var.nominator_YourTest_variant2, var.denominator_YourTest_variant2, std.atoi(req.http.X-ClientID))) {
			set req.http.GOVUK-ABTest-YourTest = "variant2";
		} else if (randombool_seeded(var.nominator_YourTest_variant3, var.denominator_YourTest_variant3, std.atoi(req.http.X-ClientID))) {
			set req.http.GOVUK-ABTest-YourTest = "variant3";
		} else {
			set req.http.GOVUK-ABTest-YourTest = "variant4";
		}
	}
}
# End dynamic section
